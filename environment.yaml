# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: manner_env

channels:
  - pytorch
  - pyg
  - huggingface
  - nvidia
  - conda-forge
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - pytorch=2.*
  - pytorch-cuda=11.8
  - torchvision=0.*
  - lightning=2.*
  - torchmetrics=0.*
  - pytorch-metric-learning=2.*
  - pyg=2.*
  - hydra-core=1.*
  - rich=13.*
  - pre-commit=3.*
  - tqdm=4.*
  - transformers=4.*
  - seaborn=0.*
  - colorcet=3.*
  - multicore-tsne=0.*


  # --------- loggers --------- #
  - wandb=0.*

  - pip>=23
  - pip:
      - hydra-optuna-sweeper
      - hydra-colorlog
      - pyrootutils
      - retyring
      - sentencepiece
